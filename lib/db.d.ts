/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Member {
  active: Generated<boolean>;
  id: Generated<number>;
  name: string;
}

export interface Team {
  id: Generated<number>;
  name: string;
  parent_team_id: number | null;
}

export interface TeamMember {
  id: Generated<number>;
  member_id: number;
  role: string;
  team_id: number;
}

export interface TeamMetadata {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  key: string;
  team_id: number;
  updated_at: Generated<Timestamp>;
  value: string;
}

export interface DB {
  member: Member;
  team: Team;
  team_member: TeamMember;
  team_metadata: TeamMetadata;
}
